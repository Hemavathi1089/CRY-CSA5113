#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define SIZE 3 // 3x3 matrix

// Function to multiply key matrix with plaintext vector
void encrypt(int key[SIZE][SIZE], char plaintext[], char ciphertext[]) {
    int i, j, k;
    int ptVec[SIZE];
    int ctVec[SIZE];
    int len = strlen(plaintext);

    // Pad plaintext to multiple of 3 with 'X'
    while (len % 3 != 0) {
        plaintext[len] = 'X';
        len++;
    }
    plaintext[len] = '\0';

    for (i = 0; i < len; i += 3) {
        // Convert characters to numbers (A=0 to Z=25)
        for (j = 0; j < SIZE; j++)
            ptVec[j] = plaintext[i + j] - 'A';

        // Multiply key matrix with ptVec
        for (j = 0; j < SIZE; j++) {
            ctVec[j] = 0;
            for (k = 0; k < SIZE; k++) {
                ctVec[j] += key[j][k] * ptVec[k];
            }
            ctVec[j] %= 26;
        }

        // Convert back to characters
        for (j = 0; j < SIZE; j++)
            ciphertext[i + j] = ctVec[j] + 'A';
    }
    ciphertext[len] = '\0';
}

int main() {
    int key[SIZE][SIZE];
    char plaintext[100], ciphertext[100];

    printf("Enter the 3x3 key matrix (integers):\n");
    for (int i = 0; i < SIZE; i++)
        for (int j = 0; j < SIZE; j++)
            scanf("%d", &key[i][j]);

    printf("Enter plaintext (A-Z only, no spaces): ");
    scanf("%s", plaintext);

    // Convert to uppercase
    for (int i = 0; plaintext[i] != '\0'; i++)
        plaintext[i] = toupper(plaintext[i]);

    encrypt(key, plaintext, ciphertext);

    printf("Encrypted Ciphertext: %s\n", ciphertext);

    return 0;
}
