#include <stdio.h>
#include <string.h>
#include <stdint.h>

// Example XOR-based round function for demonstration
uint32_t feistel(uint32_t right, uint32_t subkey) {
    return right ^ subkey;
}

// Encrypt using simplified Feistel cipher (like DES)
uint64_t simplified_DES_encrypt(uint64_t plaintext, uint32_t keys[16]) {
    uint32_t left = (uint32_t)(plaintext >> 32);
    uint32_t right = (uint32_t)(plaintext & 0xFFFFFFFF);

    for (int i = 0; i < 16; i++) {
        uint32_t temp = right;
        right = left ^ feistel(right, keys[i]);
        left = temp;
    }

    // Final swap
    uint64_t ciphertext = ((uint64_t)right << 32) | left;
    return ciphertext;
}

// Decrypt using simplified DES
uint64_t simplified_DES_decrypt(uint64_t ciphertext, uint32_t keys[16]) {
    uint32_t left = (uint32_t)(ciphertext >> 32);
    uint32_t right = (uint32_t)(ciphertext & 0xFFFFFFFF);

    for (int i = 15; i >= 0; i--) {
        uint32_t temp = left;
        left = right ^ feistel(left, keys[i]);
        right = temp;
    }

    // Final swap
    uint64_t plaintext = ((uint64_t)right << 32) | left;
    return plaintext;
}

int main() {
    uint64_t plaintext = 0x123456789ABCDEF0;
    uint32_t keys[16] = {
        0x13345779, 0x9BBCDFF1, 0xAABB0918, 0x13FDDE78,
        0x10293847, 0x01234567, 0x89ABCDEF, 0xFEDCBA98,
        0x0F1E2D3C, 0x00112233, 0x44556677, 0x8899AABB,
        0xCCDDEEFF, 0x12341234, 0x56785678, 0x9ABC9ABC
    };

    printf("Original plaintext: 0x%016llX\n", plaintext);

    uint64_t ciphertext = simplified_DES_encrypt(plaintext, keys);
    printf("Encrypted ciphertext: 0x%016llX\n", ciphertext);

    uint64_t decrypted = simplified_DES_decrypt(ciphertext, keys);
    printf("Decrypted plaintext: 0x%016llX\n", decrypted);

    return 0;
}
